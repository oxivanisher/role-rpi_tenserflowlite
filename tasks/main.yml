---

# based on https://www.tensorflow.org/lite/guide/build_rpi

- name: ensure build-essential
  ansible.builtin.package:
    name: build-essential
    state: present

- name: ensure git repository
  ansible.builtin.git:
    repo: 'https://github.com/tensorflow/tensorflow.git'
    dest: "{{ tenserflow_lite_dir }}"
    version: "{{ tenserflow_lite_version }}"
  register: git_state

- name: download TenserFlow Lite dependencies
  ansible.builtin.command: "{{ tenserflow_lite_dir }}/tensorflow/lite/tools/make/download_dependencies.sh"
  args:
    chdir: "{{ tenserflow_lite_dir }}"
  become_user: "{{ tenserflow_lite_user }}"
  ignore_errors: "{{ ansible_check_mode }}"
  when: git_state.after != git_state.before

- name: compile TenserFlow Lite
  ansible.builtin.command: "{{ tenserflow_lite_dir }}/tensorflow/lite/tools/make/build_rpi_lib.sh"
  args:
    chdir: "{{ tenserflow_lite_dir }}"
  become_user: "{{ tenserflow_lite_user }}"
  ignore_errors: "{{ ansible_check_mode }}"
  when: git_state.after != git_state.before

- name: ensure model directory exists
  ansible.builtin.file:
    path: "{{ tenserflow_lite_model_dir }}"
    state: directory
    owner: "{{ tenserflow_lite_user }}"
    group: "{{ tenserflow_lite_user }}"
    mode: 0750

- name: download model and extract
  ansible.builtin.unarchive:
    src: "{{ tenserflow_lite_model_url }}"
    dest: "{{ tenserflow_lite_model_dir }}"
    creates: "{{ tenserflow_lite_model_dir }}/detect.tflite"
    remote_src: true
  ignore_errors: "{{ ansible_check_mode }}"
